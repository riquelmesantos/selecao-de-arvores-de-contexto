View(tau_1_contexto)
source("~/.active-rstudio-document", echo=TRUE)
setwd(wd)
source("~/.active-rstudio-document", echo=TRUE)
View(tau_1_contexto )
deltas <- list()
for(i in 1:100){
deltas[[1]][[i]] <- tau_1_contexto$`n=1600`[[i]]$deltas$'111'
}
i
tau_1_contexto$`n=1600`[[i]]$deltas
tau_1_contexto$`n=1600`[[i]]$deltas$['111']
tau_1_contexto$`n=1600`[[i]]$deltas
tau_1_contexto$`n=1600`[[i]]$deltas['111']
deltas <- list()
for(i in 1:100){
deltas[[1]][[i]] <- tau_1_contexto$`n=1600`[[i]]$deltas['111']
}
for(i in 1:100){
deltas_111 <- tau_1_contexto$`n=1600`[[i]]$deltas['111']
}
hist(  deltas_111,
main = "Distribuição dos deltas para o contexto tau=1",
xlab = "Delta",
ylab = "Frequência",
col = "lightblue",
border = "black")
deltas_111 <- c()
for(i in 1:100){
deltas_111[i] <- tau_1_contexto$`n=1600`[[i]]$deltas['111']
}
hist(  deltas_111,
main = "Distribuição dos deltas para o contexto tau=1",
xlab = "Delta",
ylab = "Frequência",
col = "lightblue",
border = "black")
lwd = 2
)
line(  density(deltas_111, adjust = 1.5),
col = "red",
lwd = 2)
abline(  density(deltas_111, adjust = 1.5),
col = "red",
lwd = 2)
hist(  deltas_111,
main = "Distribuição dos deltas para o contexto tau=1",
xlab = "Delta",
ylab = "Frequência",
col = "lightblue",
border = "black")
abline(  density(deltas_111, adjust = 1.5),
col = "red",
lwd = 2)
abline
library(ggplot2)
ggplot(data = data.frame(deltas_111), aes(x = deltas_111)) +
geom_histogram(aes(y = ..density..), bins = 30, fill = "lightblue", color = "black") +
stat_function(fun = dchisq, args = list(df = 2), color = "red", size = 1) +
labs(title = "Histograma de Deltas (111) com Densidade Qui-Quadrado",
x = "Deltas (111)",
y = "Densidade") +
theme_minimal()
hist(deltas_111, breaks = 30, probability = TRUE, main = "Histograma de deltas 111", xlab = "Deltas 111")
curve(dchisq(x, df = 2), add = TRUE, col = "red", lwd = 2)
# Adicionando a densidade da qui-quadrado com 2 graus de liberdade
legend("topright", legend = "Qui-quadrado (df=2)", col = "red", lwd = 2)
# Salvando o histograma como imagem
qqnorm(deltas_111, main = "QQ-Plot de deltas 111")
qqline(deltas_111, col = "red")
p_value_111 <- mean(deltas_111 > qchisq(0.95, df = 2))
cat("P-valor para deltas 111:", p_value_111, "\n")
mean(deltas_111 > qchisq(0.95, df = 2))
deltas_111 > qchisq(0.95, df = 2)
deltas_111
# nas = 0
deltas_111 <- deltas_111[!is.na(deltas_111)]
# Histograma e e densidade da qui-quadrado com 2 graus de liberdade no R base
hist(deltas_111, breaks = 30, probability = TRUE, main = "Histograma de deltas 111", xlab = "Deltas 111")
curve(dchisq(x, df = 2), add = TRUE, col = "red", lwd = 2)
# Adicionando a densidade da qui-quadrado com 2 graus de liberdade
legend("topright", legend = "Qui-quadrado (df=2)", col = "red", lwd = 2)
# Salvando o histograma como imagem
## QQplot
qqnorm(deltas_111, main = "QQ-Plot de deltas 111")
qqline(deltas_111, col = "red")
# p-value
p_value_111 <- mean(deltas_111 > qchisq(0.95, df = 2)
cat("P-valor para deltas 111:", p_value_111, "\n")
# Histograma e e densidade da qui-quadrado com 2 graus de liberdade no R base
hist(deltas_111, breaks = 30, probability = TRUE, main = "Histograma de deltas 111", xlab = "Deltas 111")
curve(dchisq(x, df = 2), add = TRUE, col = "red", lwd = 2)
# Adicionando a densidade da qui-quadrado com 2 graus de liberdade
legend("topright", legend = "Qui-quadrado (df=2)", col = "red", lwd = 2)
## QQplot
qqnorm(deltas_111, main = "QQ-Plot de deltas 111")
qqline(deltas_111, col = "red")
p_value_111 <- mean(deltas_111 > qchisq(0.95, df = 2)
)
p_value_111 <- mean(deltas_111 > qchisq(0.95, df = 2))
cat("P-valor para deltas 111:", p_value_111, "\n")
p_value_111
mean(deltas_111 > qchisq(0.95, df = 2))
p_value_111 <- mean(deltas_111 > qchisq(0.95, df = 2))
cat("P-valor para deltas 111:", p_value_111, "\n")
cat("P-valor para deltas 111:", p_value_111)
deltas_111 > qchisq(0.95, df = 2)
p_value_111 <- mean(deltas_111 > qchisq(0.95, df = 2))
cat("P-valor para deltas 111:", p_value_111)
# Boxplot
boxplot(deltas_111, main = "Boxplot de deltas 111", ylab = "Deltas 111")
observed <- table(cut(deltas_111, breaks = seq(0, max(deltas_111), length.out = 30)))
expected <- dchisq(seq(0, max(deltas_111), length.out = 30), df = 2) * length(deltas_111)
chisq_test <- chisq.test(observed, p = expected / sum(expected), rescale.p = TRUE)
observed
expected
chisq_test <- chisq.test(observed, p = expected / sum(expected), rescale.p = TRUE)
dchisq(seq(0, max(deltas_111), length.out = 30), df = 2)
# goodness of fit qui-quadrado
observed <- table(cut(deltas_111, breaks = seq(0, max(deltas_111), length.out = 30)))
expected <- dchisq(seq(0, max(deltas_111), length.out = length(deltas_111)), df = 2) * length(deltas_111)
chisq_test <- chisq.test(observed, p = expected / sum(expected), rescale.p = TRUE)
expected
observed
# goodness of fit qui-quadrado
observed <- table(cut(deltas_111, breaks = seq(0, max(deltas_111), length.out = length(deltas_111))))
expected <- dchisq(seq(0, max(deltas_111), length.out = length(deltas_111)), df = 2) * length(deltas_111)
chisq_test <- chisq.test(observed, p = expected / sum(expected), rescale.p = TRUE)
chisq.test
# goodness of fit qui-quadrado
observed <- table(cut(deltas_111, breaks = seq(0, max(deltas_111), length.out = 30)))
expected <- dchisq(seq(0, max(deltas_111), length.out = 30), df = 2) * length(deltas_111)
observed
expected
chisq_test <- chisq.test(observed, p = expected / sum(expected), rescale.p = TRUE)
observed <- table(cut(deltas_111, breaks = seq(0, max(deltas_111), length.out = 30)))
expected <- dchisq(seq(0, max(deltas_111), length.out = 30), df = 2) * length(deltas_111)
chisq_test <- chisq.test(observed, p = expected / sum(expected), rescale.p = TRUE)
library(chatrr)
install.packages('chatrr')
remotes::install_github('mlverse/chatrr')
install.packages("chattr")
library(chattr)
my_chat <- ellmer::chat_anthropic()
rlang::last_trace()
chattr_use("gpt41-nano")
chattr_use()
?chattr_use
chattr_use("gpt41-mini")
chattr_use("gpt41-mini")
# Pass an `ellmer` object
my_chat <- ellmer::chat_anthropic()
rlang::last_trace()
chattr_use("ollama")
chattr_app()
breaks <- seq(0, max(deltas_111), length.out = 30)
observed <- table(cut(deltas_111, breaks = breaks))
# Calcular probabilidade esperada em cada intervalo via função de distribuição acumulada
expected_probs <- diff(pchisq(breaks, df = 2))
expected <- expected_probs * length(deltas_111)
# Teste qui-quadrado com os valores esperados
chisq_test <- chisq.test(x = observed, p = expected / sum(expected), rescale.p = TRUE)
chisq_test
# Exemplo: colapsar bins com < 5 esperados
observed_vec <- as.numeric(observed)
expected_vec <- as.numeric(expected)
# Identificar quais categorias têm valores esperados pequenos
small <- expected_vec < 5
# Agrupar os bins pequenos (você pode fazer isso manualmente ou programar algo mais robusto)
# Aqui um exemplo bruto: juntar o primeiro e segundo, último e penúltimo, etc.
# Ou usar uma função para isso:
library(Hmisc)
install.packages('Hmisc')
# Exemplo: colapsar bins com < 5 esperados
observed_vec <- as.numeric(observed)
expected_vec <- as.numeric(expected)
# Identificar quais categorias têm valores esperados pequenos
small <- expected_vec < 5
# Agrupar os bins pequenos (você pode fazer isso manualmente ou programar algo mais robusto)
# Aqui um exemplo bruto: juntar o primeiro e segundo, último e penúltimo, etc.
# Ou usar uma função para isso:
library(Hmisc)
grouped <- cut2(deltas_111, g = 10)  # Agrupa em 10 bins com número de observações balanceado
observed_grouped <- table(grouped)
# Calcular probabilidade esperada por novo agrupamento
breaks_grouped <- as.numeric(tapply(deltas_111, grouped, max))
breaks_grouped <- c(min(deltas_111), breaks_grouped)
expected_probs_grouped <- diff(pchisq(breaks_grouped, df = 2))
expected_grouped <- expected_probs_grouped * length(deltas_111)
chisq.test(x = observed_grouped, p = expected_grouped / sum(expected_grouped), rescale.p = TRUE)
ks.test(deltas_111, "pchisq", df = 2)
source("~/.active-rstudio-document", echo=TRUE)
chisq.test(x = observed_grouped, p = expected_grouped / sum(expected_grouped), rescale.p = TRUE)
ks.test(deltas_111, "pchisq", df = 2)
ks.test(deltas_111, "pchisq", df = 3)
ks.test(deltas_111, "pchisq", df = 4)
ks.test(deltas_111, "pchisq", df = 1)
chisq.test(x = observed_grouped, p = expected_grouped / sum(expected_grouped), rescale.p = TRUE)
p_value_111 <- mean(deltas_111 > qchisq(0.95, df = 2))
cat("P-valor para deltas 111:", p_value_111)
source("~/.active-rstudio-document", echo=TRUE)
# Histograma e e densidade da qui-quadrado com 2 graus de liberdade no R base
hist(deltas_111, breaks = 30, probability = TRUE, main = "Histograma de deltas 111", xlab = "Deltas 111")
curve(dchisq(x, df = 2), add = TRUE, col = "red", lwd = 2)
# Adicionando a densidade da qui-quadrado com 2 graus de liberdade
legend("topright", legend = "Qui-quadrado (df=2)", col = "red", lwd = 2)
## QQplot
qqnorm(deltas_111, main = "QQ-Plot de deltas 111")
qqline(deltas_111, col = "red")
p_value_111 <- mean(deltas_111 > qchisq(0.95, df = 2))
qqplot(qchisq(ppoints(length(deltas_111)), df = 2),
sort(deltas_111),
main = "Q-Q plot vs. χ²(2)",
xlab = "Quantis teóricos (χ²)",
ylab = "Quantis amostrais",
pch = 19, col = "#980043")
abline(0, 1, col = "gray40", lwd = 2, lty = 2)
abline(0, 1, col = "gray40", lwd = 2, lty = 2)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
deltas_111[i] <- tau_1_contexto$`n=1600`[[i]]$deltas['1']
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
## QQplot
qqplot(qchisq(ppoints(length(deltas_111)), df = 4),
sort(deltas_111),
main = "Q-Q plot vs. χ²(2)",
xlab = "Quantis teóricos (χ²)",
ylab = "Quantis amostrais",
pch = 19, col = "#980043")
abline(0, 1, col = "gray40", lwd = 2, lty = 2)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
deltas_111[i] <- tau_1_contexto$`n=1600`[[i]]$deltas['111']
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
# Histograma e e densidade da qui-quadrado com 2 graus de liberdade no R base
hist(deltas_111, breaks = 30, probability = TRUE, main = "Histograma de deltas 111", xlab = "Deltas 111")
curve(dchisq(x, df = 2), add = TRUE, col = "red", lwd = 2)
source("~/.active-rstudio-document", echo=TRUE)
curve(dchisq(x, df = 2), add = TRUE, col = "red", lwd = 2)
# Adicionando a densidade da qui-quadrado com 2 graus de liberdade
legend("topright", legend = "Qui-quadrado (df=2)", col = "red", lwd = 2)
# Histograma e e densidade da qui-quadrado com 2 graus de liberdade no R base
hist(deltas_111, breaks = 30, probability = TRUE, main = "Histograma de deltas 111", xlab = "Deltas 111")
curve(dchisq(x, df = 2), add = TRUE, col = "red", lwd = 2)
abline(0, 1, col = "gray40", lwd = 2, lty = 2)
qqplot(qchisq(ppoints(length(deltas_111)), df = 0.5),
sort(deltas_111),
main = "Q-Q plot vs. χ²(2)",
xlab = "Quantis teóricos (χ²)",
ylab = "Quantis amostrais",
pch = 19, col = "#980043")
abline(0, 1, col = "gray40", lwd = 2, lty = 2)
qqplot(qchisq(ppoints(length(deltas_111)), df = 0.5),
sort(deltas_111),
main = "Q-Q plot vs. χ²(2)",
xlab = "Quantis teóricos (χ²)",
ylab = "Quantis amostrais",
pch = 19, col = "#980043")
abline(0, 1, col = "gray40", lwd = 2, lty = 2)
# Adicionando a densidade da qui-quadrado com 2 graus de liberdade
legend("topright", legend = "Qui-quadrado (df=2)", col = "red", lwd = 2)
hist(deltas_111, breaks = 30, probability = TRUE, main = "Histograma de deltas 111", xlab = "Deltas 111")
curve(dchisq(x, df = 2), add = TRUE, col = "red", lwd = 2)
# Adicionando a densidade da qui-quadrado com 2 graus de liberdade
legend("topright", legend = "Qui-quadrado (df=2)", col = "red", lwd = 2)
curve(dchisq(x, df = 0.5), add = TRUE, col = "red", lwd = 2)
# Adicionando a densidade da qui-quadrado com 2 graus de liberdade
legend("topright", legend = "Qui-quadrado (df=2)", col = "red", lwd = 2)
# Histograma e e densidade da qui-quadrado com 2 graus de liberdade no R base
hist(deltas_111, breaks = 30, probability = TRUE, main = "Histograma de deltas 111", xlab = "Deltas 111")
curve(dchisq(x, df = 0.5), add = TRUE, col = "red", lwd = 2)
# Adicionando a densidade da qui-quadrado com 2 graus de liberdade
legend("topright", legend = "Qui-quadrado (df=2)", col = "red", lwd = 2)
# Salvando o histograma como imagem
#ks test
ks_test_result <- ks.test(deltas_111, "pchisq", df = 0.5)
print(ks_test_result)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
tau_2_contexto <- readRDS("estimacoes/result_contexto_tau_2.RDS")
View(tau_2_contexto)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
# Histograma e e densidade da qui-quadrado com 2 graus de liberdade no R base
hist(deltas_111, breaks = 30, probability = TRUE, main = "Histograma de deltas 111", xlab = "Deltas 111")
curve(dchisq(x, df = 2), add = TRUE, col = "red", lwd = 2)
hist(deltas_111, breaks = 30, probability = TRUE, main = "Histograma de deltas 111", xlab = "Deltas 111")
curve(dchisq(x, df = 2), add = TRUE, col = "red", lwd = 2)
# Adicionando a densidade da qui-quadrado com 2 graus de liberdade
legend("topright", legend = "Qui-quadrado (df=2)", col = "red", lwd = 2)
deltas_111[i] <- tau_2_contexto$`n=40000`[[i]]$deltas['1']
deltas_111 <- c()
for(i in 1:100){
deltas_111[i] <- tau_2_contexto$`n=40000`[[i]]$deltas['1']
}
# Histograma e e densidade da qui-quadrado com 2 graus de liberdade no R base
hist(deltas_111, breaks = 30, probability = TRUE, main = "Histograma de deltas 111", xlab = "Deltas 111")
curve(dchisq(x, df = 2), add = TRUE, col = "red", lwd = 2)
# Adicionando a densidade da qui-quadrado com 2 graus de liberdade
legend("topright", legend = "Qui-quadrado (df=2)", col = "red", lwd = 2)
eltas_111 <- c()
for(i in 1:100){
deltas_111[i] <- tau_2_contexto$`n=40000`[[i]]$deltas['1']
}
# nas = 0
deltas_111 <- deltas_111[!is.na(deltas_111)]
# Histograma e e densidade da qui-quadrado com 2 graus de liberdade no R base
hist(deltas_111, breaks = 30, probability = TRUE, main = "Histograma de deltas 111", xlab = "Deltas 111")
curve(dchisq(x, df = 2), add = TRUE, col = "red", lwd = 2)
# Adicionando a densidade da qui-quadrado com 2 graus de liberdade
legend("topright", legend = "Qui-quadrado (df=2)", col = "red", lwd = 2)
source("~/.active-rstudio-document", echo=TRUE)
deltas_111 <- c()
for(i in 1:100){
deltas_111[i] <- tau_2_contexto$`n=4000`[[i]]$deltas['1']
}
# nas = 0
deltas_111 <- deltas_111[!is.na(deltas_111)]
# Histograma e e densidade da qui-quadrado com 2 graus de liberdade no R base
hist(deltas_111, breaks = 30, probability = TRUE, main = "Histograma de deltas 111", xlab = "Deltas 111")
curve(dchisq(x, df = 2), add = TRUE, col = "red", lwd = 2)
# Adicionando a densidade da qui-quadrado com 2 graus de liberdade
legend("topright", legend = "Qui-quadrado (df=2)", col = "red", lwd = 2)
# Salvando o histograma como imagem
deltas_111 <- c()
for(i in 1:100){
deltas_111[i] <- tau_2_contexto$`n=10000`[[i]]$deltas['1']
}
# nas = 0
deltas_111 <- deltas_111[!is.na(deltas_111)]
# Histograma e e densidade da qui-quadrado com 2 graus de liberdade no R base
hist(deltas_111, breaks = 30, probability = TRUE, main = "Histograma de deltas 111", xlab = "Deltas 111")
curve(dchisq(x, df = 2), add = TRUE, col = "red", lwd = 2)
# Adicionando a densidade da qui-quadrado com 2 graus de liberdade
legend("topright", legend = "Qui-quadrado (df=2)", col = "red", lwd = 2)
# Salvando o histograma como imagem
library(MASS)
ajuste <- fitdistr(deltas_111, densfun = "gamma")
shape_hat <- ajuste$estimate["shape"]
k_mle <- 2 * shape_hat
k_mle
curve(dchisq(x, df = 0.85), add = TRUE, col = "red", lwd = 2)
# Histograma e e densidade da qui-quadrado com 2 graus de liberdade no R base
hist(deltas_111, breaks = 30, probability = TRUE, main = "Histograma de deltas 111", xlab = "Deltas 111")
curve(dchisq(x, df = 0.85), add = TRUE, col = "red", lwd = 2)
# Adicionando a densidade da qui-quadrado com 2 graus de liberdade
legend("topright", legend = "Qui-quadrado (df=2)", col = "red", lwd = 2)
# Salvando o histograma como imagem
## QQplot
qqplot(qchisq(ppoints(length(deltas_111)), df = 0.5),
sort(deltas_111),
main = "Q-Q plot vs. χ²(2)",
xlab = "Quantis teóricos (χ²)",
ylab = "Quantis amostrais",
pch = 19, col = "#980043")
abline(0, 1, col = "gray40", lwd = 2, lty = 2)
# Histograma e e densidade da qui-quadrado com 2 graus de liberdade no R base
hist(deltas_111, breaks = 30, probability = TRUE, main = "Histograma de deltas 111", xlab = "Deltas 111")
curve(dchisq(x, df = 0.85), add = TRUE, col = "red", lwd = 2)
# Adicionando a densidade da qui-quadrado com 2 graus de liberdade
legend("topright", legend = "Qui-quadrado (df=2)", col = "red", lwd = 2)
# Salvando o histograma como imagem
## QQplot
qqplot(qchisq(ppoints(length(deltas_111)), df = 2),
sort(deltas_111),
main = "Q-Q plot vs. χ²(2)",
xlab = "Quantis teóricos (χ²)",
ylab = "Quantis amostrais",
pch = 19, col = "#980043")
abline(0, 1, col = "gray40", lwd = 2, lty = 2)
## QQplot
qqplot(qchisq(ppoints(length(deltas_111)), df = 0.85),
sort(deltas_111),
main = "Q-Q plot vs. χ²(2)",
xlab = "Quantis teóricos (χ²)",
ylab = "Quantis amostrais",
pch = 19, col = "#980043")
abline(0, 1, col = "gray40", lwd = 2, lty = 2)
#ks test
ks_test_result <- ks.test(deltas_111, "pchisq", df = 0.85)
print(ks_test_result)
k_mle <- 2 * shape_hat
k_mle
## QQplot
qqplot(qchisq(ppoints(length(deltas_111)), df = 0.855471 ),
sort(deltas_111),
main = "Q-Q plot vs. χ²(2)",
xlab = "Quantis teóricos (χ²)",
ylab = "Quantis amostrais",
pch = 19, col = "#980043")
abline(0, 1, col = "gray40", lwd = 2, lty = 2)
# Histograma e e densidade da qui-quadrado com 2 graus de liberdade no R base
hist(deltas_111, breaks = 30, probability = TRUE, main = "Histograma de deltas 111", xlab = "Deltas 111")
curve(dchisq(x, df = 0.855471 ), add = TRUE, col = "red", lwd = 2)
# Adicionando a densidade da qui-quadrado com 2 graus de liberdade
legend("topright", legend = "Qui-quadrado (df=2)", col = "red", lwd = 2)
# Salvando o histograma como imagem
#ks test
ks_test_result <- ks.test(deltas_111, "pchisq", df = 0.855471 )
print(ks_test_result)
ks_test_result <- ks.test(deltas_111, "pchisq", df = 2)
print(ks_test_result)
#ks test
ks_test_result <- ks.test(deltas_111, "pchisq", df =0.5)
print(ks_test_result)
source("~/.active-rstudio-document", echo=TRUE)
print(k_mle)
## QQplot
qqplot(qchisq(ppoints(length(deltas_111)), df = 1),
sort(deltas_111),
main = "Q-Q plot vs. χ²(2)",
xlab = "Quantis teóricos (χ²)",
ylab = "Quantis amostrais",
pch = 19, col = "#980043")
abline(0, 1, col = "gray40", lwd = 2, lty = 2)
qchisq(ppoints(length(deltas_111))
)
qchisq(ppoints(length(deltas_111)), df = 1)
print(k_mle)
# Histograma e e densidade da qui-quadrado com 2 graus de liberdade no R base
hist(deltas_111, breaks = 30, probability = TRUE, main = "Histograma de deltas 111", xlab = "Deltas 111")
curve(dchisq(x, df = 1), add = TRUE, col = "red", lwd = 2)
#ks test
ks_test_result <- ks.test(deltas_111, "pchisq", df =k_mle)
print(ks_test_result)
source("~/.active-rstudio-document", echo=TRUE)
